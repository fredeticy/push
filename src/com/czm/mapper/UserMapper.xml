<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.czm.mapper.UserMapper">
  
  <select id="findUserById" resultType="User">
    select * from user where userid = #{userid}
  </select>
  
  <select id="getStudentInfoBySno" resultType="StudentInfo">
    select * from student_info where sno = #{sno}
  </select>
  
 <select id="getAllStuVO" resultType="StudentVO">
 	select a.id,a.sno,a.name,a.phonenumber,
 	(select SUM(credit) from course c where c.cno in 
 	(select b.cno from student_grade b where a.sno = b.sno and b.score>=60)) credit_acquired,
 	(select SUM(credit) from course c where c.cno not in 
 	(select b.cno from student_grade b where a.sno = b.sno and b.score>=60)) credit_failed
 	from student_info a;
 </select>
   
   <select id="getAllSCVO" resultType="SCVO">
	   SELECT a.id,a.sno,
	b.name,
	max(CASE cno when 'c1601' then score else 0 end) c1,
	max(CASE cno when 'c1602' then score else 0 end) c2,
	max(CASE cno when 'c1603' then score else 0 end) c3,
	max(CASE cno when 'c1604' then score else 0 end) c4,
	max(CASE cno when 'c1605' then score else 0 end) c5,
	max(CASE cno when 'c1606' then score else 0 end) c6,
	max(CASE cno when 'c1607' then score else 0 end) c7
	from student_grade a,(select name,sno from student_info c) b
	where a.sno = b.sno
	group by sno
;

   </select>
   
   <select id="getAllMessage" resultType="Message">
   	 select id,title,content,date,createrid,msg_id
   	 from message;
   </select>
   
   <select id="getMessageByDate" resultType="Message">
     select id,title,content,date,createrid,msg_id
     from message where STR_TO_DATE(date,'%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(#{from_date},'%Y-%m-%d') 
     and STR_TO_DATE(date,'%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(#{to_date},'%Y-%m-%d');
   </select>
   
   <select id="getStuByCredit" resultType="StudentVO">
   select a.id,a.sno,a.name,a.phonenumber,
 	(select SUM(credit) from course c where c.cno in 
 	(select b.cno from student_grade b where a.sno = b.sno and b.score>=60)) credit_acquired,
 	(select SUM(credit) from course c where c.cno not in 
 	(select b.cno from student_grade b where a.sno = b.sno and b.score>=60)) credit_failed
 	from student_info a having credit_acquired <![CDATA[<]]> #{credit};
   </select>
   
   <insert id="setMessage" parameterType="Message">
    insert into message(title,content,date,createrid,msg_id)
    values(#{msgpo.title},#{msgpo.content},#{msgpo.date},#{msgpo.createrid},#{msgpo.msg_id});
   </insert>
   
   <insert id="addBatchStuInfo" parameterType="java.util.List">
    insert into student_info(sno,name,gender,phonenumber,classno,guadianphonenumber)
    values
    <foreach collection="list" item="stuList" index="index" separator=",">
     (
     #{stuList.sno},#{stuList.name},#{stuList.gender},
   	 #{stuList.phonenumber},#{stuList.classno},#{stuList.guadianphonenumber}
     )
    </foreach>
    on duplicate key update name=values(name),gender=values(gender),
    phonenumber=values(phonenumber),classno=values(classno),guadianphonenumber=values(guadianphonenumber)
   </insert>
   
   <insert id="addBatchSC" parameterType="java.util.List">
    insert into student_grade(sno,cno,score)
    values
    <foreach collection="list" item="scList" index="index" separator=",">
     (#{scList.sno},'c1601',#{scList.c1}),
     (#{scList.sno},'c1602',#{scList.c2}),
     (#{scList.sno},'c1603',#{scList.c3}),
     (#{scList.sno},'c1604',#{scList.c4}),
     (#{scList.sno},'c1605',#{scList.c5}),
     (#{scList.sno},'c1606',#{scList.c6}),
     (#{scList.sno},'c1607',#{scList.c7})
    </foreach>
    on duplicate key update score=values(score)
   </insert>
   <!-- insert into collegeinfopush.student_grade (sno,cno,score) select #{}'b1601',#{}'c1601',#{}'66' from collegeinfopush.student_grade where not exists
(select * from collegeinfopush.student_grade where sno='b1601' and cno='c1601' limit 1); -->
</mapper>